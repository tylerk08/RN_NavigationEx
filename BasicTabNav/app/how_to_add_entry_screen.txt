If want to add an entry screen the user will see first before the tab navigation, 
you can add a file called index.tsx in your app folder and then have sligtly 
different code in your app/_layout.tsx file

_layout.tsx:
Here this is telling it to have a Stack with two options at the entry point.
Option one is called index.tsx and that is ALWAYS where you go first
Option two is the (tabs) section and by having it as a stack that allows the Tab Nav
to be nested inside the main stack


import { Stack, useRouter } from "expo-router";

export default function RootLayout() {
  return (
     <Stack screenOptions={{ headerShown: false }}>
        <Stack.Screen name="index" options={{ title: "Home" }} />
        <Stack.Screen name="(tabs)" options={{ headerShown: false }} />
    </Stack>
  );
}

*******************************************************************************************
index.tsx inside app folder
This is a landing page and simply has a button to click on to navigate to the 
tab navigation

import { View, Text, Button, StyleSheet } from "react-native";
import { useRouter } from "expo-router";
import colors from "@/styles/colors";

export default function IndexScreen() {
  const router = useRouter();

  return (
    <View style={styles.container}>
      <Text style={styles.text}>Welcome to the App</Text>
      <Button
        title="Enter App"
        color={colors.primary}
        onPress={() => router.push("/(tabs)")}
      />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: colors.darkbackground,
    justifyContent: "center",
    alignItems: "center",
  },
  text: {
    fontSize: 24,
    fontWeight: "bold",
    color: colors.textondark,
    marginBottom: 20,
  },
});
